1. Диплом

-	Назва теми.
-	Виконавець.
-	Керівник.


2. Постановка задачі

-	Задано [x t ;t = ̅̅̅̅̅1, n ] – часовий ряд (послідовність значень деякого
	показника впорядкована по даті фіксування; передбачається, що фіксування
	значень виконується з однаковим інтервалом), де x t – елементи ряду, n –
	кількість елементів ряду.

-	Розробити програмне забезпечення, яке реалізує метод прогнозування часових рядів
	на основі відновлення регресії із використанням нейронної мережі.

-	Виконати прогнозування первинної інвалідності в Україні за допомогою
	розробленого програмного забезпечення.



3. Ідея методу

-	Застосування регресійних методів під час прогнозування часових рядів
	базується на припущенні, що наступне значення часового ряду є функцією від
	попередніх значень та/або зовнішніх факторів. Задача полягає у відновленні
	такої регресійної залежності.
	ФОРМУЛА x(t)=f(x(t-1),x(t-2),…,y1,y2,…)+e

-	Для вирішення задачі прогнозування часових рядів регресійним методом
	треба обрати апроксиматор, який буде відновлювати регресійну залежність
	наступного значення часового ряду від попередніх. За такий апроксиматор у
	роботі обрано штучну нейронну мережу, а саме перцептрон.

4. Перцептрон

-	Перцептрон складається з штучних нейронів модель якого має вигляд:
	РИСУНОК НА СЛАЙДІ Рисунок 1.1
	де х i — значення передані нейрону на вхід,w i — ваги для відповідних значень,
	S = ∑ ni x i ∗ w i + b, b(bias) — зсув, f— функція активації. За функцію активації
	найчастіше беруть сигмоїду: f(s) = 1/(1 + e^(−2s)).

5.1 Навчання перцептрону
-	Щоб перцептрон працював як апроксиматор, треба мінімізувати (оптимізувати) функцію
	помилок відносно вагів нейронів. Функція помилок визначається так:
	E= ∑ (o_i − y_i)^2 ,
	i∈outputs
	де output— множина номерів вихідних вузлів перцептрона, o i — значення
	i-го виходу, y i — значення, яке очікується отримати на i-му виході.

5.2 Навчання перцептрона
-	Для оптимізації функції помилок відносно вагів визначають градієнти
	вагів для функції помилок і використовують їх в одному з градієнтних методів,
	найчастіше використовують метод градієнтного спуску. Градієнт ваги між i-ми
	та j-ми нейронами визначається так:
	∇w ij = −δ j o i ,
	де (якщо функція активації є сигмоїдою)
	δ j = o j (1 − o j ) ∗ ∑ δ_k*w_j,k ,
			kєChildren(j)
	якщо j-й вузол не є вихідним, і δ j = o j (1 − o j )(o j − y j ) в іншому випадку.


6. Додаткові парамтри на вхід моделі

-	Для надання можливості поліпшення моделі у роботі запропоновано подавати на вхід
	перцептрона, окрім попередніх значень часового ряду, додаткові параметри - "Гамма-згортки".
	
-	В основі гамма-згортки лежить така функція відгуку:
	ФОРМУЛА НА СЛАЙДІ g(n) = μ ∗ (1 − μ) n−1 , де n ≥ 1, а μ ∈ (0; 2)

-	Значення згортки підраховується так:
				n−1
	ФОРМУЛА НА СЛАЙДІ y(n) = ∑ [g(k)x(n − k)]
				k=1

7. Навчання Гамма-згортки

-	При навчанні моделі є два варіанти поведінки навчального процесу:
	з навчанням гамма-згорток (налаштування параметра μ) і без навчання гамма-згорток.

-	Для налаштування параметра μ використовується градієнтний метод.
	Градієнт параметра μ визначається відносно функції помилки моделі і записується так:
				n−1
	ФОРМУЛА НА СЛАЙДІ ∇μ = [ ∑ [((g(k))′μ)*x(n − k)] ] ∗ error ,
				k=1
	ФОРМУЛА НА СЛАЙДІ де error – значення помилки для вхідного значення перцептрона, отримане на
	ФОРМУЛА НА СЛАЙДІ одній з навчальних ітерацій, а g′ μ (k) визначається так:
	ФОРМУЛА НА СЛАЙДІ g′ μ (k) = 1, коли k = 1; g′ μ (k) = (1 − kμ)(1 − μ) k−2 , коли k > 1.
	
8. Реалізація

-	Розроблено програмний продукт, призначений для розв’язання задач
	прогнозування часових рядів. Алгоритм створений на мові С++, інтерфейс
	користувача створений на мові R з використанням програмного пакету Shiny.

	РИСУНКИ НА СЛАЙДІ "C++" "RStudio" "Shiny"

9. Результати обчислювальних експериментів

-	За допомогою створеного програмного забезпечення проведено прогнозування:
	-	первинної інвалідності за цереброваскулярними хворобами в Україні
		за 24 роки (1992-2015) (на 10 тисяч населення);

	-	щоденної кількості проданого товару.

-	Якість прогнозування визначається за середнім показником RMSE для
	декількох прогнозуваь на один крок вперед.


10.1 Прогнозування первинної інвалідності за цереброваскулярними хворобами в Вінницькій області

-	Для навчання цієї моделі були задані такі параметри:
	-	розмір навчального ряду 19,
	-	приховані вузли – 1 шар з 4 вузлів,
	-	4 гамма-юніти,
	-	модель бачить 5 останніх значень ряду.
-	Прогнозування на один крок вперед для 5 точок має RMSE = 0,36, а для 3 точок RMSE = 0,037.
-	Параметри були підібрані таким чином, щоб модель прогнозувала найкраще.
	Аналогічна модель, але без гамма-юнітів виявилася гіршою.


10.2 Прогнозування первинної інвалідності за цереброваскулярними хворобами в Тернопільській області

-	Для навчання цієї моделі були задані такі самі параметри, що і для попередньої,
	але без гамма-юнітів.	
-	Прогнозування на один крок вперед для 5 точок має RMSE = 0,029.


11.1 Прогнозування щоденної кількості проданого товару.

-	Для навчання цієї моделі були задані такі параметри:
	-	розмір навчального ряду 59,
	-	приховані вузли – 1-й шар 30 вузлів, 2-й шар 3 вузлів,
	-	2 гамма-юніти,
	-	модель бачить 14 останніх значень ряду.
-	РИСУНОК НА СЛАЙДІ Глобалььний прогноз.


11.2 Порівняння прогнозування з гамма-юнітами, не здатними і здатними до навчання

-	Прогнозування DAYSALES_858 з гамма-юнітами, не здатними до навчання.
	-	РИСУНОК НА СЛАЙДІ "прогноз на 1 крок вперед".
	-	Прогнозування на один крок вперед для 5 точок має RMSE = 0,042.

-	Прогнозування DAYSALES_858 з гамма-юнітами, здатними до навчання.
	-	РИСУНОК НА СЛАЙДІ "прогноз на 1 крок вперед".
	-	Прогнозування на один крок вперед для 5 точок має RMSE = 0,11.


12. Висновки

-	Під час виконання дипломної роботи було розглянуто метод на основі відновлення регресії.
	Для відновлення регресії обрано перцептрон.

-	Було розроблено програмне забезпечення, яке дозволяє проводити прогнозування часових рядів.
	Програмне забезпечення надає користувачу можливості:
	• Завантажувати файл з початковим часовим рядом.
	• Задавати параметри навчання моделі.
	• Навчати модель.
	• Отримувати графіки прогнозів на один і на декілька кроків вперед.
	• Отримувати оцінки якості прогнозування: RMSE і MRE.
	• Зберігати отриману модель у бінарний файл.
	• Завантажувати модель з файлу.

-	Результати обчислювальних експериментів свідчать:
	• Якщо початковий ряд не є складним для прогнозування, нейромережеву
	  модель можна налаштувати і використовувати для прогнозування навіть
	  якщо навчальний ряд має невелику кількість елементів.
	• Гамма-юніти можуть поліпшити модель.
	• Показники якості прогнозування моделі з гамма-юнітами не здатними до
	  навчання виявилися кращими ніж показники якості прогнозування
	  моделі з гамма-юнітами здатними до навчання.
