library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
test()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
detach("package:digest", unload=TRUE)
library("digest", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
install.packages("dygraphs")
library("dygraphs", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
runApp()
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/usr/lib/R/library")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rep("x", 5)
rep(1, 5)
as.caracter(rep(1, 5))
as.character(rep(1, 5))
as.character(rep(1, 5)) + rep("x", 5)
head(read.table("../windpower.csv"));
colnum(head(read.table("../windpower.csv")));
ncol(head(read.table("../windpower.csv")));
ncol(read.table("../windpower.csv"));
nrow(read.table("../windpower.csv"));
ncol(head(read.table("../windpower.csv", header = TRUE, seq = ',')));
head(read.table("../windpower.csv", header = TRUE, seq = ','));
head(read.table("../windpower.csv", header = TRUE, sep = ','));
ncol(head(read.table("../windpower.csv", header = TRUE, sep = ',')));
vec <- c(1, 2, 3)
for (x in vec) {x <- x + 1;}
vec
vec <- as.character(rep(1, 5))
for (i in 1:length(vec)) {
vec[i] <- paste0("x", vec[i]);
}
vec <- as.character(1:length(vec))
for (i in 1:length(vec)) {
vec[i] <- paste0("x", vec[i]);
}
remove(list = ls())
as.character(TRUE);
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(read.table("../windpower.csv", header=TRUE, sep='input$sep',''));
head(read.table("../windpower.csv", header=TRUE, sep=','));
? write.table;
write.table(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv2(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.table(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(within(head(read.table("../windpower.csv", header=TRUE, sep=',')), rm(date)), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(within(read.table("../windpower.csv", header=TRUE, sep=','), rm(date)), "../windpower_without_date.csv", row.names = FALSE, quote = FALSE)
var_ <- list();
var_
var_[1] <- 1
var_
var_[1]
var_[[1]]
var_ <- c(var_, 4)
var_
var_ <- c(var_, "5")
var_
var_ <- list(3)
var_
length(var_) <- 4
var_
var_[2] <- 4
var_
var_[[2]] <- 3
var_
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
remuve(var_)
remove(var_)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
shiny::runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
runApp()
runApp()
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
runApp()
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
shiny::runApp()
detach("package:GammaNN", unload=TRUE)
detach("package:dygraphs", unload=TRUE)
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
head(frame);
shiny::runApp()
runApp()
1:2.5
2.5
1:1.5
1:0.5
1:-1.5
1:-0.5
shiny::runApp()
runApp()
shiny::runApp()
1:1
runApp()
runApp()
runApp()
runApp()
as.numeric(1)
as.numeric(1.7)
as.integer(1.7)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
class(data.frame())
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
hd()
R.home()
home_dir()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?write
runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
