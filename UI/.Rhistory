series <- series[order(series$REMNANTS_DATE),];
series[["DAYSALES"]] <- series[["DAYSALES"]];
for (i in 1:nrow(series)) {
series$DAYSALES[i] <- ((series$DAYSALES[i] - min_DAYSALES) / (max_DAYSALES - min_DAYSALES));
}
rownames(series) <- NULL;
res[[as.character(ID)]] <- series;
}
return (res);
}
}
get_series_by_AGZS_ID(285)
class(get_series_by_AGZS_ID(285)$REMNANTS_DATE)
class(get_series_by_AGZS_ID(285)[["REMNANTS_DATE"]])
head(get_series_by_AGZS_ID(285)[["REMNANTS_DATE"]])
head(get_series_by_AGZS_ID(285)[1][["REMNANTS_DATE"]])
head(get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]])
class(get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]])
class(get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][1])
get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][1]
get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][1]
get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][2]
get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][3]
get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][2] - get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][1]
as.Date('1990/02/17')
2013-05-11T23:59:00
as.Date('2013-05-11T23:59:00')
class(as.Date('1990/02/17'))
as.Date('1990/02/17') - as.Date('1990/02/16')
unclass(as.Date('1990/02/17') - as.Date('1990/02/16'))
unclass(as.Date('1990/02/17') - as.Date('1990/02/16'))[1]
as.Date('1990/02/17') - as.Date('1990/02/16')[1]
unclass(as.Date('1990/02/17') - as.Date('1990/02/16'))[1]
abs(-1)
runApp()
runApp()
get_series_by_AGZS_ID(285)[[1]][["REMNANTS_DATE"]][1]
get_series_by_AGZS_ID(285)
as.Date("2012-07-02T00:00:00", format = "%Y-%m-%dT%h:%m:%s")
as.Date("2012-07-02T00:00:00", format = "%Y-%m-%d")
as.Date("2012-07-02T00:00:00", format = "%h:%m:%s")
as.Date("2012-07-02T00:00:00", format = c("%Y-%m-%d", "%h:%m:%s"))
as.Date("2012-07-02T00:00:00", format = c("y-m-d", "%h:%m:%s"))
as.Date("00:00:00", format = c("%h:%m:%s"))
class(get_series_by_AGZS_ID(285)$REMNANTS_DATE)
class(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)
str <- get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE[1]
factor(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE[1])
get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE$names
class(levels(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)[1])
levels(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)[1]
as.Date("2012-07-02", format = "%Y-%m-%d") - as.Date("2012-07-03", format = "%Y-%m-%d")
as.Date("2012-07-02", format = "%Y-%m-%d") - as.Date("2012-06-03", format = "%Y-%m-%d")
as.Date("2012-07-02", format = "%Y-%m-%d") - as.Date("2012-06-02", format = "%Y-%m-%d")
as.Date("2013-07-02", format = "%Y-%m-%d") - as.Date("2014-07-02", format = "%Y-%m-%d")
(as.Date("2013-07-02", format = "%Y-%m-%d") - as.Date("2014-07-02", format = "%Y-%m-%d"))[1]
unclass(as.Date("2013-07-02", format = "%Y-%m-%d") - as.Date("2014-07-02", format = "%Y-%m-%d"))[1]
get_series_by_AGZS_ID <- NULL;
get_the_longest_AGZS_series <- NULL;
{
AGZS_table <- read.table("../agzs_remnants.txt", header=TRUE, sep=',');
max_DAYSALES <- as.numeric(max(AGZS_table$DAYSALES))
min_DAYSALES <- as.numeric(min(AGZS_table$DAYSALES))
get_series_by_AGZS_ID <<- function(AGZS_ID) {
res <- list();
if(is.null(AGZS_table)) return(NULL);
for (ID in AGZS_ID) {
series <- within(AGZS_table[AGZS_table$AGZS_ID == ID,], rm(AGZS_ID));
#series <- within(series[order(series$REMNANTS_DATE),], rm(REMNANTS_DATE))
series <- series[order(series$REMNANTS_DATE),];
series[["DAYSALES"]] <- as.numeric(series[["DAYSALES"]]);
for (i in 1:nrow(series)) {
series$DAYSALES[i] <- ((series$DAYSALES[i] - min_DAYSALES) / (max_DAYSALES - min_DAYSALES));
}
rownames(series) <- NULL;
res[[as.character(ID)]] <- series;
}
return (res);
}
get_the_longest_AGZS_series <<- function(AGZS_series) {
if (class(AGZS_series) != class(data.frame())) return(NULL);
if (nrow(AGZS_series) <= 1) return(AGZS_series);
res_start <- 1;
res_length <- 0;
cur_start <- 1;
cur_length <- 0;
dtparts = t(as.data.frame(strsplit(levels(AGZS_series$REMNANTS_DATE), 'T')));
thetimes = chron(dates=dtparts[,1],times=dtparts[,2], format=c('y-m-d','h:m:s'));
print(thetimes);
max_i <- nrow(AGZS_series) - 1;
for (i in 1:max_i) {
difference <- AGZS_series$REMNANTS_DATE[i + 1] - AGZS_series$REMNANTS_DATE[i];
if (
difference > #1 day + eps
||
difference < #1 day - eps
) {
cur_start <- i + 1;
cur_length <- 0;
} else {
cur_length <- cur_length + 1;
if (res_length < cur_length) {
res_start <- cur_start;
res_length <- cur_length;
}
}
}
return (AGZS_series[res_start:(res_start + res_length),]);
}
}
get_series_by_AGZS_ID <- NULL;
get_the_longest_AGZS_series <- NULL;
{
AGZS_table <- read.table("../agzs_remnants.txt", header=TRUE, sep=',');
max_DAYSALES <- as.numeric(max(AGZS_table$DAYSALES))
min_DAYSALES <- as.numeric(min(AGZS_table$DAYSALES))
get_series_by_AGZS_ID <<- function(AGZS_ID) {
res <- list();
if(is.null(AGZS_table)) return(NULL);
for (ID in AGZS_ID) {
series <- within(AGZS_table[AGZS_table$AGZS_ID == ID,], rm(AGZS_ID));
#series <- within(series[order(series$REMNANTS_DATE),], rm(REMNANTS_DATE))
series <- series[order(series$REMNANTS_DATE),];
series[["DAYSALES"]] <- as.numeric(series[["DAYSALES"]]);
for (i in 1:nrow(series)) {
series$DAYSALES[i] <- ((series$DAYSALES[i] - min_DAYSALES) / (max_DAYSALES - min_DAYSALES));
}
rownames(series) <- NULL;
res[[as.character(ID)]] <- series;
}
return (res);
}
get_the_longest_AGZS_series <<- function(AGZS_series) {
if (class(AGZS_series) != class(data.frame())) return(NULL);
if (nrow(AGZS_series) <= 1) return(AGZS_series);
res_start <- 1;
res_length <- 0;
cur_start <- 1;
cur_length <- 0;
dtparts = t(as.data.frame(strsplit(levels(AGZS_series$REMNANTS_DATE), 'T')));
thetimes = chron(dates=dtparts[,1],times=dtparts[,2], format=c('y-m-d','h:m:s'));
print(thetimes);
max_i <- nrow(AGZS_series) - 1;
for (i in 1:max_i) {
# difference <- AGZS_series$REMNANTS_DATE[i + 1] - AGZS_series$REMNANTS_DATE[i];
# if (
#   difference > #1 day + eps
#   ||
#   difference < #1 day - eps
# ) {
#   cur_start <- i + 1;
#   cur_length <- 0;
# } else {
#   cur_length <- cur_length + 1;
#   if (res_length < cur_length) {
#     res_start <- cur_start;
#     res_length <- cur_length;
#   }
# }
}
return (AGZS_series[res_start:(res_start + res_length),]);
}
}
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285))
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
?chron
install.packages("chron")
library(chron)
mean_by_n <- function(vec, n) {
res <- vec;
length(res) <- 0;
i <- 1;
while(i <= length(vec)) {
next_i <- i + min(length(vec) - i, n - 1);
res <- c(res, mean(vec[i:next_i]));
i <- next_i + 1;
}
return(res);
}
mean_by_n_for_frame <- function(table, n) {
res <- list();
for (i in 1:ncol(table)) {
res[[i]] <- mean_by_n(table[[i]], n);
}
res <- as.data.frame(res);
colnames(res) <- colnames(table);
return(res);
}
get_series_by_AGZS_ID <- NULL;
get_the_longest_AGZS_series <- NULL;
{
AGZS_table <- read.table("../agzs_remnants.txt", header=TRUE, sep=',');
max_DAYSALES <- as.numeric(max(AGZS_table$DAYSALES))
min_DAYSALES <- as.numeric(min(AGZS_table$DAYSALES))
get_series_by_AGZS_ID <<- function(AGZS_ID) {
res <- list();
if(is.null(AGZS_table)) return(NULL);
for (ID in AGZS_ID) {
series <- within(AGZS_table[AGZS_table$AGZS_ID == ID,], rm(AGZS_ID));
#series <- within(series[order(series$REMNANTS_DATE),], rm(REMNANTS_DATE))
series <- series[order(series$REMNANTS_DATE),];
series[["DAYSALES"]] <- as.numeric(series[["DAYSALES"]]);
for (i in 1:nrow(series)) {
series$DAYSALES[i] <- ((series$DAYSALES[i] - min_DAYSALES) / (max_DAYSALES - min_DAYSALES));
}
rownames(series) <- NULL;
res[[as.character(ID)]] <- series;
}
return (res);
}
get_the_longest_AGZS_series <<- function(AGZS_series) {
if (class(AGZS_series) != class(data.frame())) return(NULL);
if (nrow(AGZS_series) <= 1) return(AGZS_series);
res_start <- 1;
res_length <- 0;
cur_start <- 1;
cur_length <- 0;
dtparts = t(as.data.frame(strsplit(levels(AGZS_series$REMNANTS_DATE), 'T')));
thetimes = chron(dates=dtparts[,1],times=dtparts[,2], format=c('y-m-d','h:m:s'));
print(thetimes);
max_i <- nrow(AGZS_series) - 1;
for (i in 1:max_i) {
# difference <- AGZS_series$REMNANTS_DATE[i + 1] - AGZS_series$REMNANTS_DATE[i];
# if (
#   difference > #1 day + eps
#   ||
#   difference < #1 day - eps
# ) {
#   cur_start <- i + 1;
#   cur_length <- 0;
# } else {
#   cur_length <- cur_length + 1;
#   if (res_length < cur_length) {
#     res_start <- cur_start;
#     res_length <- cur_length;
#   }
# }
}
return (AGZS_series[res_start:(res_start + res_length),]);
}
}
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
levels(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)[1]
levels(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
dtimes = c("2002-06-09 12:45:40","2003-01-29 09:30:40",
"2002-09-04 16:45:40","2002-11-13 20:00:40",
"2002-07-07 17:30:40")
dtparts = t(as.data.frame(strsplit(dtimes,' ')))
print(dtparts)
levels(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)
get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE
unclass(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)
unclass(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE[1])
as.character(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE[1])
as.character(get_series_by_AGZS_ID(285)[[1]]$REMNANTS_DATE)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_the_longest_AGZS_series(get_series_by_AGZS_ID(285)[[1]])
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(285)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(285)
get_the_longest_AGZS_series(285)[[1]]
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(285)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_series_by_AGZS_ID(285)
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
source('~/Documents/Diploma/GammaNN/UI/utils.R')
source('~/Documents/Diploma/GammaNN/UI/utils.R')
library(chron)
mean_by_n <- function(vec, n) {
res <- vec;
length(res) <- 0;
i <- 1;
while(i <= length(vec)) {
next_i <- i + min(length(vec) - i, n - 1);
res <- c(res, mean(vec[i:next_i]));
i <- next_i + 1;
}
return(res);
}
mean_by_n_for_frame <- function(table, n) {
res <- list();
for (i in 1:ncol(table)) {
res[[i]] <- mean_by_n(table[[i]], n);
}
res <- as.data.frame(res);
colnames(res) <- colnames(table);
return(res);
}
get_series_by_AGZS_ID <- NULL;
get_the_longest_AGZS_series <- NULL;
{
AGZS_table <- read.table("../agzs_remnants.txt", header=TRUE, sep=',');
max_DAYSALES <- as.numeric(max(AGZS_table$DAYSALES))
min_DAYSALES <- as.numeric(min(AGZS_table$DAYSALES))
normalize <- function(vec) {
vec_max <- as.numeric(max(vec))
vec_min <- as.numeric(min(vec))
for (i in 1:lendth(vec)) {
vec[i] <- ((vec[i] - vec_min) / (vec_max - vec_min));
}
return (vec);
}
get_series_by_AGZS_ID <<- function(AGZS_ID) {
if(is.null(AGZS_table)) return(NULL);
series <- within(AGZS_table[AGZS_table$AGZS_ID == ID,], rm(AGZS_ID));
#series <- within(series[order(series$REMNANTS_DATE),], rm(REMNANTS_DATE))
series <- series[order(series$REMNANTS_DATE),];
series$DAYSALES <- normalize(series$DAYSALES);
# series[["DAYSALES"]] <- as.numeric(series[["DAYSALES"]]);
# for (i in 1:nrow(series)) {
#   series$DAYSALES[i] <- ((series$DAYSALES[i] - min_DAYSALES) / (max_DAYSALES - min_DAYSALES));
# }
rownames(series) <- NULL;
return (series);
}
get_the_longest_AGZS_series <<- function(AGZS_series) {
if (class(AGZS_series) != class(data.frame())) return(NULL);
if (nrow(AGZS_series) <= 1) return(AGZS_series);
res_start <- 1;
res_length <- 0;
cur_start <- 1;
cur_length <- 0;
dtparts = t(as.data.frame(strsplit(as.character(AGZS_series$REMNANTS_DATE), 'T')));
rownames(dtparts) <- NULL;
thetimes = chron(dates=dtparts[,1],times=dtparts[,2], format=c('y-m-d','h:m:s'));
eps <- 0.05
max_i <- nrow(AGZS_series) - 1;
for (i in 1:max_i) {
difference <- unclass(thetimes[i + 1] - thetimes[i])[[1]];
if (
difference > 1 + eps
||
difference < 1 - eps
) {
cur_start <- i + 1;
cur_length <- 0;
} else {
cur_length <- cur_length + 1;
if (res_length < cur_length) {
res_start <- cur_start;
res_length <- cur_length;
}
}
}
return (AGZS_series[res_start:(res_start + res_length),]);
}
}
write_AGZS <- function(ID, file_path = "../test.txt") {
write.csv(within(get_the_longest_AGZS_series(get_series_by_AGZS_ID(ID)), rm(REMNANTS_DATE)), file_path, row.names = FALSE, quote = FALSE)
}
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(285)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(285)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(285)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
runApp()
runApp()
runApp()
write(data.frame(wp1 = read.table("../Data/mean_target_24.csv")[[1]]), "../Data/mean_wp1_24.csv")
write(as.data.frame(read.table("../Data/mean_target_24.csv")[[1]]), "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv((as.data.frame(read.table("../Data/mean_target_24.csv")[[1]]), "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv(as.data.frame(read.table("../Data/mean_target_24.csv")[[1]]), "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv(as.data.frame(read.table("../Data/mean_target_24.csv")[[1]]), "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv(as.data.frame(as.list(read.table("../Data/mean_target_24.csv"))[[1]]), "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv(as.data.frame(read.table("../Data/mean_target_24.csv")$wp1), "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv(read.table("../Data/mean_target_24.csv")$wp1, "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
write.csv(read.table("../Data/mean_target_24.csv")$wp1, "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
head(read.table("../Data/mean_target_24.csv")$wp1)
head(read.table("../Data/mean_target_24.csv")[1])
write.csv(read.table("../Data/mean_target_24.csv", header=TRUE, sep=',')$wp1, "../Data/mean_wp1_24.csv", row.names = FALSE, quote = FALSE)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(286)
write_AGZS(196)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(645)
write_AGZS(645)
write_AGZS(645)
write_AGZS(645)
write_AGZS(645)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(645)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(645)
shiny::runApp()
write_AGZS(858)
write_AGZS(858)
write_AGZS(858)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(858)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
normalize_table_in_file("../Data/test.txt")
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(858)
normalize_table_in_file("../Data/AGZS_858.txt")
shiny::runApp()
write.csv(read.table("../Data/Цереброваскулярні хвороби.txt", header=TRUE, sep=' '), "../Data/Цереброваскулярні хвороби.txt", row.names = FALSE, quote = FALSE);
write.csv(read.table("../Data/Цереброваскулярні хвороби.txt", header=TRUE, sep=' '), "../Data/Цереброваскулярні хвороби.txt", row.names = FALSE, quote = FALSE, sep = ',');
write.csv(read.table("../Data/Цереброваскулярні хвороби.txt", header=TRUE, sep='\t'), "../Data/Цереброваскулярні хвороби.txt", row.names = FALSE, quote = FALSE, sep = ',');
write.csv(read.table("../Data/Цереброваскулярні хвороби.txt", header=TRUE, sep='\t'), "../Data/Цереброваскулярні хвороби.txt", row.names = FALSE, quote = FALSE);
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
normalize_table_in_file("../Data/Цереброваскулярні хвороби Дніпропетровська.txt")
normalize_table_in_file("../Data/Цереброваскулярні хвороби Запорізька.txt")
normalize_table_in_file("../Data/Цереброваскулярні хвороби Київська.txt")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
normalize_table_in_file("../Data/Цереброваскулярні хвороби Рівненська.txt")
runApp()
normalize_table_in_file("../Data/Цереброваскулярні хвороби Закарпатська.txt")
normalize_table_in_file("../Data/Цереброваскулярні хвороби Тернопільська.txt")
runApp()
runApp()
runApp()
write_AGZS(196)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(196)
write_AGZS(285)
shiny::runApp()
shiny::runApp()
write_AGZS(196)
source('~/Documents/Diploma/GammaNN/UI/utils.R')
write_AGZS(196)
normalize_table_in_file("../Data/AGZS_196.txt")
shiny::runApp()
runApp()
runApp()
source('~/Documents/Diploma/GammaNN/UI/utils.R')
get_wp_correlation_coeffs()
shiny::runApp()
shiny::runApp()
