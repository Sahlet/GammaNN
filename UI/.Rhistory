runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rep("x", 5)
rep(1, 5)
as.caracter(rep(1, 5))
as.character(rep(1, 5))
as.character(rep(1, 5)) + rep("x", 5)
head(read.table("../windpower.csv"));
colnum(head(read.table("../windpower.csv")));
ncol(head(read.table("../windpower.csv")));
ncol(read.table("../windpower.csv"));
nrow(read.table("../windpower.csv"));
ncol(head(read.table("../windpower.csv", header = TRUE, seq = ',')));
head(read.table("../windpower.csv", header = TRUE, seq = ','));
head(read.table("../windpower.csv", header = TRUE, sep = ','));
ncol(head(read.table("../windpower.csv", header = TRUE, sep = ',')));
vec <- c(1, 2, 3)
for (x in vec) {x <- x + 1;}
vec
vec <- as.character(rep(1, 5))
for (i in 1:length(vec)) {
vec[i] <- paste0("x", vec[i]);
}
vec <- as.character(1:length(vec))
for (i in 1:length(vec)) {
vec[i] <- paste0("x", vec[i]);
}
remove(list = ls())
as.character(TRUE);
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(read.table("../windpower.csv", header=TRUE, sep='input$sep',''));
head(read.table("../windpower.csv", header=TRUE, sep=','));
? write.table;
write.table(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv2(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.table(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv")
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE)
write.csv(head(read.table("../windpower.csv", header=TRUE, sep=',')), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(within(head(read.table("../windpower.csv", header=TRUE, sep=',')), rm(date)), "../tmp.csv", row.names = FALSE, quote = FALSE)
write.csv(within(read.table("../windpower.csv", header=TRUE, sep=','), rm(date)), "../windpower_without_date.csv", row.names = FALSE, quote = FALSE)
var_ <- list();
var_
var_[1] <- 1
var_
var_[1]
var_[[1]]
var_ <- c(var_, 4)
var_
var_ <- c(var_, "5")
var_
var_ <- list(3)
var_
length(var_) <- 4
var_
var_[2] <- 4
var_
var_[[2]] <- 3
var_
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
remuve(var_)
remove(var_)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
shiny::runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
runApp()
runApp()
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
runApp()
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
runApp()
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
shiny::runApp()
detach("package:GammaNN", unload=TRUE)
detach("package:dygraphs", unload=TRUE)
runApp()
detach("package:GammaNN", unload=TRUE)
library("GammaNN", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
head(frame);
shiny::runApp()
runApp()
1:2.5
2.5
1:1.5
1:0.5
1:-1.5
1:-0.5
shiny::runApp()
runApp()
shiny::runApp()
1:1
runApp()
runApp()
runApp()
runApp()
as.numeric(1)
as.numeric(1.7)
as.integer(1.7)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
class(data.frame())
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
hd()
R.home()
home_dir()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?write
runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
write.csv(read.table("../target.csv", header=TRUE, sep=','), "../mean_target.csv", row.names = FALSE, quote = FALSE)
mean(read.table("../target.csv", header=TRUE, sep=','))
mean(c(1, 2))
min(1, 2)
min(2, 1)
r <- c(1, 2)
length(r) <- 1
r
length(r) <- 3
r
remuve(r)
remove(r)
mean_by_n <- function(vec, n) {
res <- vec;
length(res) <- 0;
i <- 1;
while(i < length(vec)) {
next_i <- i + min(length(vec) - i, n - 1);
res <- c(res, vec[i:next_i]);
i <- next_i;
}
}
mean_by_n(c(1, 1, 1, 1, 1, 1), 2)
mean_by_n <- function(vec, n) {
res <- vec;
length(res) <- 0;
i <- 1;
while(i < length(vec)) {
next_i <- i + min(length(vec) - i, n - 1);
res <- c(res, vec[i:next_i]);
i <- next_i;
}
return(res);
}
mean_by_n(c(1, 1, 1, 1, 1, 1), 2)
mean_by_n <- function(vec, n) {
res <- vec;
length(res) <- 0;
i <- 1;
while(i < length(vec)) {
next_i <- i + min(length(vec) - i, n - 1);
res <- c(res, mean(vec[i:next_i]));
i <- next_i;
}
return(res);
}
mean_by_n(c(1, 1, 1, 1, 1, 1), 2)
mean_by_n <- function(vec, n) {
res <- vec;
length(res) <- 0;
i <- 1;
while(i <= length(vec)) {
next_i <- i + min(length(vec) - i, n - 1);
res <- c(res, mean(vec[i:next_i]));
i <- next_i + 1;
}
return(res);
}
mean_by_n(c(1, 1, 1, 1, 1, 1), 2)
mean_by_n(c(1, 2, 1, 3, 1, 1), 2)
mean_by_n(c(1, 2, 1, 3, 1, 1), 4)
mean_by_n(c(1, 1, 1, 1, 1, 1.1), 2)
mean_by_n(c(1, 1, 1, 1, 1, 1.2), 2)
mean_by_n_for_frame(table, n) {
res <- list();
for (i in 1:ncol(table)) {
res[[i]] <- mean_by_n(table[[i]], n);
}
res <- as.data.frame(res);
colnames(res) <- colnames(table);
return(res);
}
mean_by_n_for_frame <- function(table, n) {
res <- list();
for (i in 1:ncol(table)) {
res[[i]] <- mean_by_n(table[[i]], n);
}
res <- as.data.frame(res);
colnames(res) <- colnames(table);
return(res);
}
mean_by_n_for_frame(head(read.table("../target.csv", header=TRUE, sep=','), n = 100), 24)
mean_by_n_for_frame(head(read.table("../target.csv", header=TRUE, sep=','), n = 100), 25)
write.csv(mean_by_n_for_frame(read.table("../target.csv", header=TRUE, sep=','), 24), "../mean_target_24.csv", row.names = FALSE, quote = FALSE)
runApp()
shiny::runApp()
runApp()
runApp()
plot("../mean_target_24.csv")
write.csv(read.table("../target.csv", header=TRUE, sep=',')[[1]], "../wp1.csv", row.names = FALSE, quote = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
